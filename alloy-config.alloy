// Receive OTLP from your app
otelcol.receiver.otlp "in" {
  grpc { endpoint = "0.0.0.0:4317" }
  http { endpoint = "0.0.0.0:4318" }
}

// ---- Tempo (traces) ----
otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "http://tempo:4317" // or Grafana Cloud endpoint
    tls { insecure = true }
  }
}

// ---- Loki (logs) ----
loki.write "loki" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push" // or Grafana Cloud Loki push endpoint
  }
}

// Map OTEL logs â†’ Loki
otelcol.processor.attributes "log_labels" {
  action { key = "service.name" action = "insert" from_attribute = "service.name" }
}

otelcol.exporter.loki "loki_export" {
  forward_to = [loki.write.loki.receiver]
}

// ---- Mimir (metrics via remote_write) ----
prometheus.remote_write "mimir" {
  endpoint {
    url = "http://mimir:9009/api/v1/push" // or Grafana Cloud Prometheus remote_write
  }
}

// Pipelines
otelcol.service "pipelines" {
  traces {
    receivers = [otelcol.receiver.otlp.in]
    exporters = [otelcol.exporter.otlp.tempo]
  }
  logs {
    receivers = [otelcol.receiver.otlp.in]
    processors = [otelcol.processor.attributes.log_labels]
    exporters = [otelcol.exporter.loki.loki_export]
  }
  metrics {
    receivers = [otelcol.receiver.otlp.in]
    exporters = [prometheus.remote_write.mimir]
  }
}
